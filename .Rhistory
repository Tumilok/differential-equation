library(limSolve)
library(tidyverse)
library(reshape2)
install.packages("reshape2")
library(limSolve)
library(tidyverse)
library(reshape2)
n <- as.integer(n)
library(limSolve)
library(tidyverse)
library(reshape2)
n <- readline(prompt = "Podaj gęstość próbkowania: ")
n <- as.integer(n)
e1 <- function(x) {
if (0 < x && x <= 2/3) {
return (x * 3 / 2)
} else if (x > 2/3 && x < 4/3) {
return ((4 - 3*x)/2)
} else {
return (0)
}
}
e1 <- function(x) {
if (0 < x && x <= 2/3) {
return (3*x/2)
} else if (x > 2/3 && x < 4/3) {
return ((4 - 3*x)/2)
} else {
return (0)
}
}
e2 <- function(x) {
if (2/3 < x && x <= 4/3) {
return ((3*x - 2)/2)
} else if (4/3 < x && x < 2) {
return ((6 - 3*x)/2)
} else {
return (0)
}
}
e3 <- function(x) {
if (4/3 < x && x <= 2) {
return ((3*x - 4)/2)
} else {
return (0)
}
}
B <- matrix(rep(0, len = 9),nrow = 3, ncol = 3)
B[1,1] <- 73/27
B[2,1] <- -29/18
B[3,1] <- 0
B[1,2] <- B[2,1]
B[2,2] <- 35/9
B[3,2] <- -41/18
B[1,3] <- B[3,1]
B[2,3] <- B[3,2]
B[3,3] <- 59/54
L <- c(0, 0, 0)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
u <- c(e1, e2, e3)
remove(u)
"%f*x%" <- Vectorize(function(f, n) {
force(f)
force(n)
function(x,y) f(x,y) * n
})
addFunctions <- function(f1,f2) {
force(f1)
force(f2)
function(x,y) f1(x,y) + f2(x,y)
}
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n*n), ncol = n, nrow = n)
for (i in 1:n) {
for (j in 1:n) {
x <- -1 + (2*(j-1))/n
y <- 1 - (2*(i-1))/n
if (!(x>=0 && y >=0))
temp[i,j] <- u(x, y)
}
}
"%f*x%" <- Vectorize(function(f, n) {
force(f)
force(n)
function(x) f(x) * n
})
addFunctions <- function(f1,f2) {
force(f1)
force(f2)
function(x) f1(x) + f2(x)
}
B <- matrix(rep(0, len = 9),nrow = 3, ncol = 3)
B[1,1] <- 73/27
B[2,1] <- -29/18
B[3,1] <- 0
B[1,2] <- B[2,1]
B[2,2] <- 35/9
B[3,2] <- -41/18
B[1,3] <- B[3,1]
B[2,3] <- B[3,2]
B[3,3] <- 59/54
L <- c(0, 0, 0)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n*n), ncol = n, nrow = n)
for (i in 1:n) {
for (j in 1:n) {
x <- -1 + (2*(j-1))/n
if (!(x>=0 && y >=0))
temp[i,j] <- u(x)
}
}
View(temp)
View(temp)
temp <- matrix(rep(0, len = n*n), ncol = n, )
for (i in 1:n) {
for (j in 1:n) {
x <- (2*(j-1))/n
if (!(x>=0 && y >=0))
temp[i,j] <- u(x)
}
}
}
for (i in 1:n) {
for (j in 1:n) {
x <- (2*(j-1))/n
if (!(x>=0 && y >=0))
temp[i,j] <- u(x)
}
}
if (x>=0 && x <=2)
temp <- matrix(rep(0, len = n*n), ncol = n, nrow = n)
for (i in 1:n) {
for (j in 1:n) {
x <- (2*(j-1))/n
if (x>=0 && x <=2)
temp[i,j] <- u(x)
}
}
View(temp)
L <- c(1.4, 1/2, 1/3)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n*n), ncol = n, nrow = n)
for (i in 1:n) {
x <- (2*(i-1))/n
if (x>=0 && x <=2)
temp[i,j] <- u(x)
}
temp <- c[n]
temp <- c(n)
temp <- c(1..n)
temp <- c[1..n]
temp <- c[1:n]
temp <- c[1:10]
temp <- c[1:10]
temp <- c[1:10]
remove(temp)
temp <- c[1:10]
temp <- 1:10
temp <- 1:n
temp <- [0:n]
temp <- c[0:n]
temp <- c(rep(0, len = n))
for (i in 1:n) {
x <- (2*(i-1))/n
if (x>=0 && x <=2)
temp[i] <- u(x)
}
temp
temp
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
View(longData)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
View(temp)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
View(temp)
View(temp)
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
View(temp)
longData <- melt(temp)
View(longData)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
n <- readline(prompt = "Podaj gęstość próbkowania: ")
n <- as.integer(n)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
n <- readline(prompt = "Podaj gęstość próbkowania: ")
n <- as.integer(n)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
View(longData)
n <- readline(prompt = "Podaj gęstość próbkowania: ")
n <- readline(prompt = "Podaj gęstość próbkowania: ")
n <- as.integer(n)
remove(j)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
View(temp)
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
View(longData)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
L <- c(0, 0, 0)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
u <- c(e1, e2, e3)
u <- c(e1, e2, e3)
u <- u %f*x% W
View(u)
u <- Reduce(addFunctions, u)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y")
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y", title = "Wibracje")
L <- c(0, 0, 0)
L[1] <- 1/2 * ((1/4)^(1/3)) + 1/2
L[3] <- 1/2 + 1/2
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y", title = "Wibracje")
L <- c(0, 0, 0)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y", title = "Wibracje")
e1 <- function(x) {
if (0 < x && x <= 2/3) {
return (3*x/2)
} else if (2/3 < x && x < 4/3) {
return ((4 - 3*x)/2)
} else {
return (0)
}
}
e2 <- function(x) {
if (2/3 < x && x <= 4/3) {
return ((3*x - 2)/2)
} else if (4/3 < x && x < 2) {
return ((6 - 3*x)/2)
} else {
return (0)
}
}
e3 <- function(x) {
if (4/3 < x && x <= 2) {
return ((3*x - 4)/2)
} else {
return (0)
}
}
L <- c(0, 0, 0)
L[1] <- 1/2 * ((1/4)^(1/3)) + 1/2
L[3] <- 1/2 + 1/2
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y", title = "Wibracje")
library(limSolve)
library(tidyverse)
library(reshape2)
n <- readline(prompt = "Input sampling density: ")
n <- as.integer(n)
n <- readline(prompt = "Input sampling density: ")
n <- as.integer(n)
e1 <- function(x) {
if (0 < x && x <= 2/3) {
return (3*x/2)
} else if (2/3 < x && x < 4/3) {
return ((4 - 3*x)/2)
} else {
return (0)
}
}
e2 <- function(x) {
if (2/3 < x && x <= 4/3) {
return ((3*x - 2)/2)
} else if (4/3 < x && x < 2) {
return ((6 - 3*x)/2)
} else {
return (0)
}
}
e3 <- function(x) {
if (4/3 < x && x <= 2) {
return ((3*x - 4)/2)
} else {
return (0)
}
}
"%f*x%" <- Vectorize(function(f, n) {
force(f)
force(n)
function(x) f(x) * n
})
addFunctions <- function(f1,f2) {
force(f1)
force(f2)
function(x) f1(x) + f2(x)
}
B <- matrix(rep(0, len = 9),nrow = 3, ncol = 3)
B[1,1] <- 73/27
B[2,1] <- -29/18
B[3,1] <- 0
B[1,2] <- B[2,1]
B[2,2] <- 35/9
B[3,2] <- -41/18
B[1,3] <- B[3,1]
B[2,3] <- B[3,2]
B[3,3] <- 59/54
L <- c(0, 0, 0)
W <- Solve(B,L)
u <- c(e1, e2, e3)
u <- u %f*x% W
u <- Reduce(addFunctions, u)
temp <- matrix(rep(0, len = n), ncol = n, nrow = 1)
for (i in 1:n) {
x <- (2*(i-1))/n
temp[1, i] <- u(x)
}
colnames(temp) <- seq(from=0,by=2/n, length.out = n)
longData <- melt(temp)
ggplot(longData, aes(x = Var2, y = value)) +
geom_line() + labs(x = "x", y = "y", title = "Vibration")
